:mod:`distancematrix.consumer.threshold_counter`
================================================

.. py:module:: distancematrix.consumer.threshold_counter


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   distancematrix.consumer.threshold_counter.ThresholdCounter
   distancematrix.consumer.threshold_counter.DistancedThresholdCounter



.. py:class:: ThresholdCounter(thresholds)

   Bases: :class:`distancematrix.consumer.abstract_consumer.AbstractConsumer`

   Consumer that counts the number of values in each column of the distancematrix that are below
   or equal to specified thresholds.

   This consumer counts values as they are passed and does not extrapolate or keep information about which
   values were already counted. Specifically: partial calculations will result in counts of the produced values,
   and passing the same diagonals multiple time could result in double counts.

   .. method:: initialise(self, dims, query_subseq, series_subseq)

      Initialise this consumer.

      :param dims: the number of dimensions (data channels) this consumer will receive
      :param query_subseq: the number of query subsequences (rows in the distance matrix)
      :param series_subseq: the number of series subsequences (column in the distance matrix)
      :return: None


   .. method:: process_diagonal(self, diag, values)

      Method called when a diagonal of the distance matrix is calculated.

      The number of values on the diagonal might be less than the diagonal of the full matrix profile,
      this can occur when not enough data is available yet to calculate the entire distance matrix
      (typically for streaming when not enough data is available to fill the entire foreseen space).

      :param diagonal_index: index of the diagonal in range ]-num_query_subseq, num_series_subseq[,
          the main diagonal has index 0
      :param values: array of shape (num_dimensions, num_values_on_diagonal) containing the distances
      :return: None


   .. method:: process_column(self, column_index, values)

      Method called when a column of the distance matrix is calculated.

      The number of values on the column might be less than the column of the full matrix profile,
      this can occur when not enough data is available yet to calculate the entire distance matrix
      (typically for streaming when not enough data is available to fill the entire foreseen space).

      :param column_index: index of the column, in range [0, series_subseq[
      :param values: array of shape (num_dimensions, num_values_on_column) containing the distances
      :return: None



.. py:class:: DistancedThresholdCounter(thresholds, exclusion)

   Bases: :class:`distancematrix.consumer.abstract_consumer.AbstractConsumer`

   Consumer that counts the number of values in each column of the distancematrix that are below
   or equal to specified thresholds, with the added restriction of only counting elements that are at least
   a number of values apart from each other.

   This consumer does not support diagonal calculations.

   .. method:: initialise(self, dims, query_subseq, series_subseq)

      Initialise this consumer.

      :param dims: the number of dimensions (data channels) this consumer will receive
      :param query_subseq: the number of query subsequences (rows in the distance matrix)
      :param series_subseq: the number of series subsequences (column in the distance matrix)
      :return: None


   .. method:: process_diagonal(self, diag, values)
      :abstractmethod:

      Method called when a diagonal of the distance matrix is calculated.

      The number of values on the diagonal might be less than the diagonal of the full matrix profile,
      this can occur when not enough data is available yet to calculate the entire distance matrix
      (typically for streaming when not enough data is available to fill the entire foreseen space).

      :param diagonal_index: index of the diagonal in range ]-num_query_subseq, num_series_subseq[,
          the main diagonal has index 0
      :param values: array of shape (num_dimensions, num_values_on_diagonal) containing the distances
      :return: None


   .. method:: process_column(self, column_index, values)

      Method called when a column of the distance matrix is calculated.

      The number of values on the column might be less than the column of the full matrix profile,
      this can occur when not enough data is available yet to calculate the entire distance matrix
      (typically for streaming when not enough data is available to fill the entire foreseen space).

      :param column_index: index of the column, in range [0, series_subseq[
      :param values: array of shape (num_dimensions, num_values_on_column) containing the distances
      :return: None



